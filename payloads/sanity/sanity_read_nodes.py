# Read Array of NodeIDs from OPC UA Server
# This code reads data for an array of 12 NodeIDs from a target OPC UA server.
# The structure follows specified rules, with comments for explanation.

import datetime
from protocol import *
from config import *

def attack(server_details, num_requests=1):
    """
    서버 세부 정보와 연결한 뒤 특정한 NodeID를 읽는 요청을 수행하는 함수입니다.
    """

    # OPC UA 서버 연결 설정
    program_type, ip_addr, port, query_string = server_details

    # OPCUA 인스턴스 생성 및 세션 시작
    opcua = OPCUA(program_type=program_type, ip_addr=ip_addr, port=port, query_string=query_string)
    opcua.create_session()

    # 메시지 헤더 빌드
    message_header = opcua.build_opcua_message_header()

    # 메시지 바디 구성
    message_body = opcua.build_opcua_message_body(type_id=1, req_id=631)
    message_body += struct.pack("<Q", 0)  # Max age 설정 (기본값 0)
    message_body += struct.pack("<I", 3)  # 타임스탬프 리턴 타입 (Neither)

    # Nodes to read (array of 12 NodeIDs)
    nodes_to_read = bytes.fromhex("0c0000000100b73a05000000ffffffff0000ffffffff0100b93a05000000ffffffff0000ffffffff0100203e05000000ffffffff0000ffffffff0100df3c05000000ffffffff0000ffffffff01001a3d05000000ffffffff0000ffffffff01001e3d05000000ffffffff0000ffffffff0100263d05000000ffffffff0000ffffffff01002a3d05000000ffffffff0000ffffffff005e05000000ffffffff0000ffffffff01002e3c05000000ffffffff0000ffffffff005f05000000ffffffff0000ffffffff01005b0105000000ffffffff0000ffffffff")
    message = message_header + message_body + nodes_to_read

    # 요청 전송
    print(f"[-] Sending MSG Request - Read Array of 12 NodeIDs x {num_requests} times")
    opcua.send_recv(message, count=num_requests, should_recv=True)

    # 연결 종료
    print("[-] Closing connection")
    opcua.close()
